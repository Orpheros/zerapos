name: Deploy Zerapos FE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t zerapos-fe:latest .

      - name: Install ZeroTier and join network
        run: |
          curl -s https://install.zerotier.com | sudo bash
          sudo systemctl start zerotier-one
          sleep 5
          sudo zerotier-cli join bb720a5aaecfa5e5
          sleep 10
          echo "ZT_NODE_ID=$(sudo zerotier-cli info | awk '{print $3}')" >> $GITHUB_ENV
          echo "ZeroTier node ID: $ZT_NODE_ID"

      - name: Auto-authorize node on ZeroTier
        env:
          ZEROTIER_API_TOKEN: ${{ secrets.ZEROTIER_API_TOKEN }}
        run: |
          echo "Authorizing ZeroTier node..."
          ZT_NODE_ID=$(sudo zerotier-cli info | awk '{print $3}')
          ZT_NETWORK_ID="bb720a5aaecfa5e5"

          echo "Node ID: $ZT_NODE_ID"
          echo "Waiting for ZeroTier node to register..."
          for i in {1..10}; do
            STATUS=$(curl -s -H "Authorization: bearer $ZEROTIER_API_TOKEN" \
              "https://api.zerotier.com/api/v1/network/$ZT_NETWORK_ID/member/$ZT_NODE_ID" \
              | jq -r .config.id 2>/dev/null || echo "none")
            if [ "$STATUS" != "none" ] && [ "$STATUS" != "null" ]; then
              echo "Node found on ZeroTier — authorizing..."
              curl -s -X POST \
                -H "Authorization: bearer $ZEROTIER_API_TOKEN" \
                -H "Content-Type: application/json" \
                -d '{"authorized": true}' \
                "https://api.zerotier.com/api/v1/network/$ZT_NETWORK_ID/member/$ZT_NODE_ID"
              echo "✅ Node $ZT_NODE_ID authorized."
              break
            fi
            echo "Node not yet visible... retrying in 5s ($i/10)"
            sleep 5
          done

      # - name: Refresh ZeroTier connection
      #   run: |
      #     echo "Refreshing ZeroTier connection..."
      #     sudo zerotier-cli leave $ZT_NETWORK_ID || true
      #     sleep 3
      #     sudo zerotier-cli join $ZT_NETWORK_ID
      #     echo "Rejoined network, waiting for OK state..."
      #     for i in {1..10}; do
      #       STATUS=$(sudo zerotier-cli listnetworks | awk '{print $6}')
      #       echo "Status: $STATUS"
      #       if [ "$STATUS" = "OK" ]; then
      #         echo "✅ ZeroTier connection active!"
      #         sudo zerotier-cli listnetworks
      #         ip addr show | grep zt || true
      #         break
      #       else
      #         echo "Waiting 5s..."
      #         sleep 5
      #       fi
      #     done

      - name: Copy project to remote server and deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /data/services/zerapos || exit
            git fetch origin main
            git reset --hard origin/main

            echo "Building Docker image on server..."
            docker build -t zerapos-fe:latest .

            echo "Stopping old container..."
            docker stop zerapos-fe-container || true
            docker rm zerapos-fe-container || true

            echo "Running new container..."
            docker run -d -p 8080:80 --name zerapos-fe-container zerapos-fe:latest

            echo "✅ Deployment complete!"
